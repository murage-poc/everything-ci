name: Build
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  ci:
    name: Build docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Semantic Release
        id: srelease
        uses: cycjimmy/semantic-release-action@v2
        with:
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Docker buildX
        uses: docker/setup-buildx-action@v1

      - name: Prepare docker image tag
        id: docker_tag
        run: |
          domain="${{secrets.DOCKER_USERNAME}}"
          name="${{github.event.repository.name}}"
          version="${{ steps.srelease.outputs.last_release_version }}"
          
          echo "${{ steps.srelease.outputs.last_release_version }}"
          echo "${{ steps.srelease.outputs.new_release_published }}"
          echo "${{ steps.srelease.outputs.last_release_version }}"
          
          if [ '${{ steps.srelease.outputs.new_release_published }}' = 'true' ]; then
            version="${{ steps.srelease.outputs.new_release_version }}"
          fi
          
          TAG="${domain}/${name}:${version}"
          echo ::set-output name=tag::${TAG}


      - name: Build and push docker image
        id: docker_build
        if: steps.srelease.outputs.new_release_published == 'true' #only if we have a new release
        uses: docker/build-push-action@v2
        with:
          push: false
          tags: ${{steps.docker_tag.outputs.tag}}
